<?php
    /**
     * 记录和统计内存使用情况
     * @param unknown $start
     * @param string $end
     * @param number $dec
     */
    function G($start, $end='', $dec = 4)
    {
        static $_info = array();
        static $_mem  = array();
        if(is_float($end)){
            $_info[$start] = $end;
        }elseif (!empty($end))
        {
            
        }else {
            $_info[$start] = microtime(TRUE);
            $_mem[$start]= memory_get_usage();
        }
    }
    
    function parse_name($name, $type=0) {
        if ($type) {
            return ucfirst(preg_replace("/_([a-zA-Z])/e", "strtoupper('\\1')", $name));
        } else {
            return strtolower(trim(preg_replace("/[A-Z]/", "_\\0", $name), "_"));
        }
    }
    
    function require_cache($filename)
    {
        static $_importFiles = array();
        if(!isset($_importFiles[$filename])){
            //测试文件是否存在
            if (file_exists_case($filename)) {
                require $filename;
                $_importFiles[$filename] = true;
            } else {
                $_importFiles[$filename] = false;
            }
        }
        return $_importFiles[$filename];
    }
    
    function file_exists_case($filename)
    {
        if(is_file($filename))
        {
            if(basename(realpath($filename))!=basename($filename))
            {
                return false;
            }
            return true;
        }
        return false;
    }
    
    function require_array($array, $return = false){
        foreach ($array as $file)
        {
            if(require_cache($file) && $return)
            {
                return true;
            }
            if($return)
                return false;
        }
    }
    /**
     * 
     * @param unknown $name
     * @param string $baseUrl
     * @param string $ext
     */
    function load($name, $baseUrl = '', $ext =".php"){
        $name = str_replace(array('.','#'), array('/','.'), $name);
        if(empty($baseUrl))
        {
            
        }
    }
?>


























