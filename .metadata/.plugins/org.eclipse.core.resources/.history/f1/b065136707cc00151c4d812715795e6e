<?php
namespace Lib\Core;

class Model
{
    const MODEL_INSERT   =   1;  // 插入模型数据
    const MODEL_UPDATE   =   2;  //更新模型数据
    const MODEL_BOTH     =   3;  //包含上面两种方式
    const MUST_VALIDATE  =   1;  //必须验证
    const EXISTS_VALIDATE =  0;  //表单存在字段则验证
    const VALUE_VALIDATE  =  2;  //表单值不为空则验证
    
    //当前使用的扩展模型
    private $_extModel    =   null;
    //当前数据库对象
    protected $db         =   null;
    //主键名称
    protected $pk         =   'id';
    //数据表前缀
    protected $tablePrefix =   '';
    //模型名称
    protected $name        =   '';
    //数据库名称
    protected $dbName      =   '';
    //数据库配置
    protected $connection  =    '';
    //数据表名称
    protected $TableName =  '';
    //实际数据表名
    protected $trueTableName = '';
    //最近错误信息
    protected $error         = '';
    //字段信息
    protected $field         = array();
    //数据信息
    protected $data          = array();
    //查询表达参数
    protected $option        = array();
    protected $_validate     = array();
    protected $_auto         = array();
    protected $_map          = array();
    protected $_scope        = array();
    //是否自动检测数据表字段信息
    protected $autoCheckField = true;
    //是否批处理验证
    protected $patchValidate  = false;
    //链操作方法列表
    protected $method = array('table','order',
        'alias','having','group','lock','distinct',
        'auto','filter','validate'
    );
    
    public function __construct($name='',$tablePrefix='',$connection='')
    {
        //初始化操作
        $this->_initialize();
        
    }
    //回调方法 初始化模型
    protected function _initialize()
    {
        
    }
    
    protected function _CheckTableInfo()
    {
        if(empty($this->field))
        {
            
        }
    }
}
function C($name= null , $value = null){
    static $_config = array();
    if(empty($name))
    {
        if(!empty($value))
        {
            
        }
    }
}
function S($name, $value='',$option = null){
    
}
class Cache{
    protected $handler;
    protected $option = array();
    
    public function connect($type='', $option = array())
    {
        if(empty($type))
            $type = C('DATA_CACHE_TYPE');
        $type = strtolower(trim($type));
        $class = 'Cache'.ucwords($type);
        if(class_exists($class))
            $cache = new $class($option);
        else 
        {
            
        }
        return $cache;
    }
    
    public function __get($name)
    {
        return $this->get($name);
    }
    public function setOptions($name,$value)
    {
        $this->option[$name] = $value;
    }
    public function getOption($name)
    {
        return $this->option[$name];
    }
    
        
}
?>



























